/*  Question
You will be given two arrays of integers. You will be asked to determine all integers that satisfy the following two conditions:

1. The elements of the first array are all factors of the integer being considered
2. The integer being considered is a factor of all elements of the second array

These numbers are referred to as being between the two arrays. You must determine how many such numbers exist. */

/* Solution */

#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

int setIsAFactor(int i, int* a, int a_size);
int factorOfSet(int i, int* b, int b_size);

int getTotalX(int a_size, int* a, int b_size, int* b) {
    // Complete this function
    int i,min=b[0], max = a[0], count = 0;
    
    for(i=0;i<a_size;i++)
    {
        if(a[i]>max)
        {
            max=a[i];
        }
    }
    
    for(i=0;i<b_size;i++)
    {
        if(b[i]<min)
        {
            min=b[i];
        }
    }
    
    for(i=max;i<=min;i++)
    {
        if(setIsAFactor(i,a,a_size) && factorOfSet(i,b,b_size) == true)
        {
            count++;
        }
    }
    return count;
}

int setIsAFactor(int i, int* a, int a_size)
{
    int j;
    for(j=0;j<a_size;j++)
    {
        if(i%a[j] != 0)
        {
            return false;
        }   
    }
    return true;
}

int factorOfSet(int i, int* b, int b_size)
{
    int j;
    for(j=0;j<b_size;j++)
    {
        if(b[j]%i != 0)
        {
            return false;
        }   
    }
    return true;
}

int main() {
    int n; 
    int m; 
    scanf("%i %i", &n, &m);
    int *a = malloc(sizeof(int) * n);
    for (int a_i = 0; a_i < n; a_i++) {
       scanf("%i",&a[a_i]);
    }
    int *b = malloc(sizeof(int) * m);
    for (int b_i = 0; b_i < m; b_i++) {
       scanf("%i",&b[b_i]);
    }
    int total = getTotalX(n, a, m, b);
    printf("%d\n", total);
    return 0;
}
